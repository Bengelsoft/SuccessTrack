name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build_success_tracker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build and test
        run: |
           npm run build --prod
           ls
      - name: Upload dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  tag_and_release:
    needs: build_success_tracker
    runs-on: ubuntu-latest
    outputs:
      tag_version: ${{steps.bump-version.outputs.VERSION}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: npm ci

      - name: Set up GPG keys
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --import
          gpg --list-keys
      - name: Configure Git
        run: |
          git config --global user.name "Bart Engelhard - Github Action"
          git config --global user.email "bengelsoft@users.noreply.github.com"
          git config --global commit.gpgsign true
      - name: Bump version and push tag
        id: bump-version
        run: |
          npm run release
          echo "::set-output name=VERSION::$(cat package.json | grep '\"version\"' | cut -d '"' -f 4)"
      - name: Push changes and tags
        run: git push --follow-tags origin main

      - name: Generate changelog for gitHub release
        id: changelog
        run: |
           npm run generateTempChangelog
           echo "::set-output name=CHANGELOG::$(cat tempCHANGELOG.md)"


      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{steps.bump-version.outputs.VERSION}}
          name: Release v${{steps.bump-version.outputs.VERSION}}
          bodyFile: tempCHANGELOG.md

  build_container_and_push_as_github_artifact:
    needs: tag_and_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Build Docker image
        run: |
          mkdir dist
          mkdir dist/success-tracker
          cp -r success-tracker dist/success-tracker
          docker build . -t success-tracker:${{ needs.tag_and_release.outputs.tag_version }} -f Containerfile
      - name: Push Docker image
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} |
          docker login ghcr.io -u USERNAME --password-stdin
          docker tag success-tracker:${{ needs.tag_and_release.outputs.tag_version }} ghcr.io/bengelsoft/success-tracker:${{ needs.tag_and_release.outputs.tag_version }}
          docker push ghcr.io/bengelsoft/success-tracker:${{ needs.tag_and_release.outputs.tag_version }}
  deploy:
    needs: tag_and_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           publish_dir: success-tracker/
           enable_jekyll: true
